// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GuestLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/dto.GuestLoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GuestRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/dto.GuestRegisterDataResponse"
                        }
                    }
                }
            }
        },
        "/auth/upload": {
            "post": {
                "description": "Upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest"
                ],
                "summary": "Upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/dto.GuestUploadResponse"
                        }
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user by auth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by auth",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuthResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "keyword",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "orderBy",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "sortedBy",
                        "name": "sortedBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/dto.UserIndexResponse"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/dto.UserAuthResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.GuestLoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 3,
                    "example": ""
                },
                "username": {
                    "type": "string",
                    "minLength": 3,
                    "example": ""
                }
            }
        },
        "dto.GuestLoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "dto.GuestRegisterDataResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": ""
                },
                "id": {
                    "type": "string",
                    "example": ""
                },
                "name": {
                    "type": "string",
                    "example": ""
                },
                "updated_at": {
                    "type": "string",
                    "example": ""
                },
                "username": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "dto.GuestRegisterRequest": {
            "type": "object",
            "required": [
                "name",
                "password",
                "username"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 3,
                    "example": ""
                },
                "password": {
                    "type": "string",
                    "minLength": 3,
                    "example": ""
                },
                "username": {
                    "type": "string",
                    "minLength": 3,
                    "example": ""
                }
            }
        },
        "dto.GuestUploadResponse": {
            "type": "object",
            "properties": {
                "fieldname": {
                    "type": "string",
                    "example": ""
                },
                "mimetype": {
                    "type": "string",
                    "example": ""
                },
                "name": {
                    "type": "string",
                    "example": ""
                },
                "size": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "dto.UserAuthDataResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": ""
                },
                "id": {
                    "type": "string",
                    "example": ""
                },
                "name": {
                    "type": "string",
                    "example": ""
                },
                "updated_at": {
                    "type": "string",
                    "example": ""
                },
                "username": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "dto.UserAuthResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.UserAuthDataResponse"
                },
                "message": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "dto.UserIndexDataResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": ""
                },
                "id": {
                    "type": "string",
                    "example": ""
                },
                "name": {
                    "type": "string",
                    "example": ""
                },
                "updated_at": {
                    "type": "string",
                    "example": ""
                },
                "username": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "dto.UserIndexResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserIndexDataResponse"
                    }
                },
                "message": {
                    "type": "string",
                    "example": ""
                },
                "pagination": {
                    "$ref": "#/definitions/helper.Paginate"
                }
            }
        },
        "helper.Paginate": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 0
                },
                "page": {
                    "type": "integer",
                    "example": 0
                },
                "total": {
                    "type": "integer",
                    "example": 0
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Service API",
	Description:      "Service API in Go using Fiber Framework",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
